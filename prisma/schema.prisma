generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String    @id @default(cuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model CustomerSupportMessage {
  id                                           String   @id @default(cuid())
  senderId                                     String
  receiverId                                   String
  message                                      String
  timestamp                                    DateTime @default(now())
  orderId                                      String
  status                                       String   @default("ACTIVE")
  Order                                        Order    @relation(fields: [orderId], references: [id])
  User_CustomerSupportMessage_receiverIdToUser User     @relation("CustomerSupportMessage_receiverIdToUser", fields: [receiverId], references: [id])
  User_CustomerSupportMessage_senderIdToUser   User     @relation("CustomerSupportMessage_senderIdToUser", fields: [senderId], references: [id])
}

model Order {
  id                     String                   @id @default(cuid())
  clerkId                String
  userId                 String
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  razorpay_order_id      String?
  razorpay_payment_id    String?
  price                  Int                      @default(0)
  discount               Int?                     @default(0)
  totalAmount            Int                      @default(0)
  tax                    Int?                     @default(0)
  deliveryAddress        String?
  deliveryDate           DateTime?
  deliveryStatus         String                   @default("PENDING")
  trackingId             String?
  paymentStatus          String                   @default("PENDING")
  deliveryPersonId       String?
  productId              String?
  quantity               Int                      @default(1)
  CustomerSupportMessage CustomerSupportMessage[]
  DeliveryPerson         User?                    @relation("DeliveryPerson", fields: [deliveryPersonId], references: [id])
  Product                Product?                 @relation(fields: [productId], references: [id])
  User                   User                     @relation("User", fields: [userId], references: [id])
  ReportedProblem        ReportedProblem[]
}

model Product {
  id          String     @id @default(cuid())
  name        String
  description String
  price       Int
  discount    Int?       @default(0)
  stock       Int        @default(0)
  categoryId  String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  imageUrls   String[]
  Order       Order[]
  Category    Category   @relation(fields: [categoryId], references: [id])
  Review      Review[]
  Wishlist    Wishlist[]
}

model ReportedProblem {
  id          String   @id @default(cuid())
  orderId     String
  userId      String
  category    String
  description String
  createdAt   DateTime @default(now())
  status      String   @default("PENDING")
  updatedAt   DateTime @updatedAt
  Order       Order    @relation(fields: [orderId], references: [id])
  User        User     @relation(fields: [userId], references: [id])
}

model Review {
  id        String   @id @default(cuid())
  userId    String
  productId String
  rating    Int      @default(5)
  comment   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product   Product  @relation(fields: [productId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}

model User {
  id                                                             String                   @id
  clerkId                                                        String
  email                                                          String                   @unique
  name                                                           String
  phone                                                          String?
  createdAt                                                      DateTime                 @default(now())
  updatedAt                                                      DateTime                 @updatedAt
  address                                                        String?
  walletBalance                                                  Int?                     @default(0)
  Role                                                           String                   @default("USER")
  CustomerSupportMessage_CustomerSupportMessage_receiverIdToUser CustomerSupportMessage[] @relation("CustomerSupportMessage_receiverIdToUser")
  CustomerSupportMessage_CustomerSupportMessage_senderIdToUser   CustomerSupportMessage[] @relation("CustomerSupportMessage_senderIdToUser")
  DeliveryPerson                                                 Order[]                  @relation("DeliveryPerson")
  User                                                           Order[]                  @relation("User")
  ReportedProblem                                                ReportedProblem[]
  Review                                                         Review[]
  Wishlist                                                       Wishlist[]
}

model Wishlist {
  id        String   @id @default(cuid())
  userId    String
  productId String
  createdAt DateTime @default(now())
  Product   Product  @relation(fields: [productId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}
