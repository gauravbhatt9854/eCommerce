generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id                  String                   @id @default(uuid())
  clerkId             String
  userId              String
  productId           String
  quantity            Int                      @default(1)
  createdAt           DateTime                 @default(now())
  updatedAt           DateTime                 @updatedAt
  status              String                   @default("PENDING")
  razorpay_order_id   String?
  razorpay_payment_id String?
  price               Int                      @default(0)
  supportMessages     CustomerSupportMessage[]
  product             Product                  @relation(fields: [productId], references: [id])
  user                User                     @relation(fields: [userId], references: [id])
  reportedProblems    ReportedProblem[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  imageUrls   String[]
  orders      Order[]
}

model User {
  id               String                   @id @default(uuid())
  clerkId          String
  email            String                   @unique
  name             String
  phone            String?
  createdAt        DateTime                 @default(now())
  updatedAt        DateTime                 @updatedAt
  messagesReceived CustomerSupportMessage[] @relation("Receiver")
  messagesSent     CustomerSupportMessage[] @relation("Sender")
  orders           Order[]
  reportedProblems ReportedProblem[]
}

model ReportedProblem {
  id          String   @id @default(uuid())
  orderId     String
  userId      String
  category    String
  description String
  createdAt   DateTime @default(now())
  status      String   @default("PENDING")
  order       Order    @relation(fields: [orderId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
}

model CustomerSupportMessage {
  id         String   @id @default(uuid())
  senderId   String
  receiverId String
  message    String
  timestamp  DateTime @default(now())
  orderId    String
  status     String   @default("ACTIVE")
  order      Order    @relation(fields: [orderId], references: [id])
  receiver   User     @relation("Receiver", fields: [receiverId], references: [id])
  sender     User     @relation("Sender", fields: [senderId], references: [id])
}
